apiVersion: v1
kind: Namespace
metadata:
  name: my-app
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-templating
  namespace: my-app
---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
  namespace: default
  labels:
    hello: world3
stringData:
  city: Raleigh
  state: NC
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-templating
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - list
      - watch
    resourceNames:
      - my-secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-templating
rules:
  - apiGroups:
      - ""
    resources:
      - "namespaces"
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - config.openshift.io
    resources:
      - ingresses
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-templating
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-templating
subjects:
  - kind: ServiceAccount
    name: argocd-templating
    namespace: my-app
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-templating
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-templating
subjects:
  - kind: ServiceAccount
    name: argocd-templating
    namespace: my-app
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openshift-gitops-policy-admin
rules:
  - verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    apiGroups:
      - policy.open-cluster-management.io
    resources:
      - configurationpolicies
      - operatorpolicies
      - certificatepolicies
      - policies
  - verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    apiGroups:
      - operator.openshift.io
    resources:
      - ingresscontrollers
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openshift-gitops-policy-admin
subjects:
  - kind: ServiceAccount
    name: openshift-gitops-argocd-application-controller
    namespace: openshift-gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-gitops-policy-admin
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: my-app
  namespace: openshift-gitops
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: My App
  sourceRepos:
    - "*"
  sourceNamespaces:
    - "*"
  destinations:
    - server: https://kubernetes.default.svc
      namespace: my-app
    - server: https://kubernetes.default.svc
      namespace: default
    - server: https://kubernetes.default.svc
      namespace: openshift-ingress-operator
    - server: https://kubernetes.default.svc
  clusterResourceWhitelist:
    - group: ""
      kind: Namespace
  namespaceResourceWhitelist:
    - group: ""
      kind: ConfigMap
    - group: operator.openshift.io
      kind: IngressController
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: my-app
  namespace: my-app
spec:
  project: my-app
  source:
    plugin:
      name: argocd-templating-v1.0
    repoURL: https://github.com/mprahl/argocd-testing.git
    targetRevision: argocd-templating-plugin
    path: "."
  destination:
    server: https://kubernetes.default.svc
    namespace: my-app
